// Code generated by go-swagger; DO NOT EDIT.

// Copyright 2021 Security Scorecard Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

package results

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ossf/scorecard-webapp/app/generated/models"
)

// PostResultReader is a Reader for the PostResult structure.
type PostResultReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostResultReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostResultCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostResultBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewPostResultDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPostResultCreated creates a PostResultCreated with default headers values
func NewPostResultCreated() *PostResultCreated {
	return &PostResultCreated{}
}

/*
PostResultCreated describes a response with status code 201, with default header values.

Successfully updated ScorecardResult
*/
type PostResultCreated struct {
	Payload string
}

// IsSuccess returns true when this post result created response has a 2xx status code
func (o *PostResultCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post result created response has a 3xx status code
func (o *PostResultCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post result created response has a 4xx status code
func (o *PostResultCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this post result created response has a 5xx status code
func (o *PostResultCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this post result created response a status code equal to that given
func (o *PostResultCreated) IsCode(code int) bool {
	return code == 201
}

func (o *PostResultCreated) Error() string {
	return fmt.Sprintf("[POST /projects/{platform}/{org}/{repo}][%d] postResultCreated  %+v", 201, o.Payload)
}

func (o *PostResultCreated) String() string {
	return fmt.Sprintf("[POST /projects/{platform}/{org}/{repo}][%d] postResultCreated  %+v", 201, o.Payload)
}

func (o *PostResultCreated) GetPayload() string {
	return o.Payload
}

func (o *PostResultCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResultBadRequest creates a PostResultBadRequest with default headers values
func NewPostResultBadRequest() *PostResultBadRequest {
	return &PostResultBadRequest{}
}

/*
PostResultBadRequest describes a response with status code 400, with default header values.

The request provided to the server was invalid
*/
type PostResultBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this post result bad request response has a 2xx status code
func (o *PostResultBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post result bad request response has a 3xx status code
func (o *PostResultBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post result bad request response has a 4xx status code
func (o *PostResultBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post result bad request response has a 5xx status code
func (o *PostResultBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post result bad request response a status code equal to that given
func (o *PostResultBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *PostResultBadRequest) Error() string {
	return fmt.Sprintf("[POST /projects/{platform}/{org}/{repo}][%d] postResultBadRequest  %+v", 400, o.Payload)
}

func (o *PostResultBadRequest) String() string {
	return fmt.Sprintf("[POST /projects/{platform}/{org}/{repo}][%d] postResultBadRequest  %+v", 400, o.Payload)
}

func (o *PostResultBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostResultBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostResultDefault creates a PostResultDefault with default headers values
func NewPostResultDefault(code int) *PostResultDefault {
	return &PostResultDefault{
		_statusCode: code,
	}
}

/*
PostResultDefault describes a response with status code -1, with default header values.

There was an internal error in the server while processing the request
*/
type PostResultDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the post result default response
func (o *PostResultDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this post result default response has a 2xx status code
func (o *PostResultDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this post result default response has a 3xx status code
func (o *PostResultDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this post result default response has a 4xx status code
func (o *PostResultDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this post result default response has a 5xx status code
func (o *PostResultDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this post result default response a status code equal to that given
func (o *PostResultDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *PostResultDefault) Error() string {
	return fmt.Sprintf("[POST /projects/{platform}/{org}/{repo}][%d] postResult default  %+v", o._statusCode, o.Payload)
}

func (o *PostResultDefault) String() string {
	return fmt.Sprintf("[POST /projects/{platform}/{org}/{repo}][%d] postResult default  %+v", o._statusCode, o.Payload)
}

func (o *PostResultDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostResultDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
